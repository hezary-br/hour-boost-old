# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD - API - Hourboost

on:
  push:
    paths:
      - ".github/workflows/push.yml"
      - "apps/farm-service/**"
      - "packages/**"
    branches: ["main"]

jobs:
  tests:
    runs-on: ubuntu-latest
    if: github.repository == 'vitormarkis/hour-boost'

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.0.1
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Filtering only essential app dependencies
        run: npx turbo prune farm-service

      - name: Installing dependencies
        working-directory: out/
        run: pnpm install

      - name: Building packages
        working-directory: out/
        run: npx turbo build:prod

      - name: Running test suite
        working-directory: out/
        run: pnpm run test

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build Docker image
        run: docker build -f apps/farm-service/Dockerfile . -t vitormarkis/hourboost-api:latest

      - name: Publish Docker image
        run: docker push vitormarkis/hourboost-api:latest

  deploy_pre_actions:
    runs-on: ubuntu-latest
    needs: tests

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Stop all users farm
        working-directory: apps/farm-service
        run: STOP_ENDPOINT=${{ secrets.STOP_ENDPOINT }} SECRET=${{ secrets.SECRET }} node pause-all-farms.noenv.js

      - name: Run database migrations
        working-directory: apps/farm-service
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy

  deploy:
    runs-on: self-hosted
    needs: [build, deploy_pre_actions]
    steps:
      - name: Pull image from Docker Hub
        run: docker pull vitormarkis/hourboost-api:latest

      - name: Delete old container
        run: docker rm -f hourboost-api-container

      - name: Run API container
        run: |
          docker run \
          --detach \
          --rm \
          --name hourboost-api-container \
          --env NODE_ENV=${{ secrets.NODE_ENV }} \
          --env CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }} \
          --env DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --env REDIS_UPSTASH_TLS=${{ secrets.REDIS_UPSTASH_TLS }} \
          --env UPSTASH_REDIS_REST_URL=${{ secrets.UPSTASH_REDIS_REST_URL }} \
          --env UPSTASH_REDIS_REST_TOKEN=${{ secrets.UPSTASH_REDIS_REST_TOKEN }} \
          --env TOKEN_IDENTIFICATION_HASH=${{ secrets.TOKEN_IDENTIFICATION_HASH }} \
          --env CLIENT_URL=${{ secrets.CLIENT_URL }} \
          --env COOKIE_DOMAIN=${{ secrets.COOKIE_DOMAIN }} \
          --env ACTIONS_SECRET=${{ secrets.ACTIONS_SECRET }} \
          --env EXAMPLE_ACCOUNT_NAME=${{ secrets.EXAMPLE_ACCOUNT_NAME }} \
          --env EXAMPLE_ACCOUNT_PASSWORD=${{ secrets.EXAMPLE_ACCOUNT_PASSWORD }} \
          --env PORT=${{ secrets.PORT }} \
          --env HASH_SECRET=${{ secrets.HASH_SECRET }} \
          --env STOP_ENDPOINT=${{ secrets.STOP_ENDPOINT }} \
          --env SECRET=${{ secrets.SECRET }} \
          --publish 4000:${{ secrets.PORT }} \
          vitormarkis/hourboost-api:latest

      - name: Delete all dangling images
        run: docker image prune -a -f
